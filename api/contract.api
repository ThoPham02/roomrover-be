info (
	title:   "contract models"
	author:  "thopb"
	email:   "thoahlgbg2002@gmail.com"
	version: "1.0"
)

import "model.api"

type (
	CreateContractReq {
		Renter        string `form:"renter"`
		Lessor        string `form:"lessor"`
		PaymentRenter string `form:"paymentRenter,optional"`
		Room          string `form:"room"`
		Internet      int64  `form:"internet"`
		CheckIn       int64  `form:"checkIn"`
		Duration      int64  `form:"duration"`
		Purpose       string `form:"purpose"`
		Price         int64  `form:"price"`
		Discount      int64  `form:"discount,optional"`
		Deposit       int64  `form:"deposit"`
		DepositDate   int64  `form:"depositDate"`
	}
	CreateContractRes {
		Result   Result   `json:"result"`
		Contract Contract `json:"contract"`
	}

	UpdateContractReq {
		ID            int64  `path:"id"`
		Renter        string `form:"renter"`
		Lessor        string `form:"lessor"`
		PaymentRenter string `form:"paymentRenter,optional"`
		Room          string `form:"room"`
		CheckIn       int64  `form:"checkIn"`
		Internet      int64  `form:"internet"`
		Duration      int64  `form:"duration"`
		Purpose       string `form:"purpose"`
		Price         int64  `form:"price"`
		Discount      int64  `form:"discount,optional"`
		Deposit       int64  `form:"deposit"`
		DepositDate   int64  `form:"depositDate"`
	}
	UpdateContractRes {
		Result   Result   `json:"result"`
		Contract Contract `json:"contract"`
	}

	GetContractReq {
		ID int64 `path:"id"`
	}
	GetContractRes {
		Result   Result   `json:"result"`
		Contract Contract `json:"contract"`
	}

	UpdateContractStatusReq {
		ID     int64 `path:"id"`
		Status int64 `form:"status"`
	}
	UpdateContractStatusRes {
		Result Result `json:"result"`
	}

	DeleteContractReq {
		ID int64 `path:"id"`
	}
	DeleteContractRes {
		Result Result `json:"result"`
	}

	FilterContractReq {
		Search     string `form:"search,optional"`
		CreateFrom int64  `form:"createFrom,optional"`
		CreateTo   int64  `form:"createTo,optional"`
		Status     int64  `form:"status,optional"`
		Limit      int64  `form:"limit"`
		Offset     int64  `form:"offset"`
	}
	FilterContractRes {
		Result    Result     `json:"result"`
		Contracts []Contract `json:"contracts"`
		Total     int64      `json:"total"`
	}

	FilterBillReq {
		Search     string `form:"search,optional"`
		CreateFrom int64  `form:"createFrom,optional"`
		CreateTo   int64  `form:"createTo,optional"`
		Status     int64  `form:"status,optional"`
		Limit      int64  `form:"limit"`
		Offset     int64  `form:"offset"`
	}
	FilterBillRes {
		Result Result `json:"result"`
		Bills  []Bill `json:"bills"`
		Total  int64  `json:"total"`
	}

	GetBillDetailReq {
		ID int64 `path:"id"`
	}
	GetBillDetailRes {
		Result Result `json:"result"`
		Bill   Bill   `json:"bill"`
	}

	UpdateBillDetailReq {
		ID       int64  `path:"id"`
		Amount   int64  `form:"amount"`
		Discount int64  `form:"discount"`
		Note     string `form:"note"`
	}
	UpdateBillDetailRes {
		Result Result `json:"result"`
		Bill   Bill   `json:"bill"`
	}

	CreateBillPayReq {
		BillID  int64  `form:"billID"`
		Amount  int64  `form:"amount"`
		PayType int64  `form:"payType"`
		PayDate int64  `form:"payDate"`
		Url     string `form:"url,optional"`
	}
	CreateBillPayRes {
		Result Result `json:"result"`
		Bill   Bill   `json:"bill"`
	}

	DeleteBillPayReq {
		ID int64 `path:"id"`
	}
	DeleteBillPayRes {
		Result Result `json:"result"`
	}

	UpdateBillStatusReq {
		ID     int64 `path:"id"`
		Status int64 `form:"status"`
	}
	UpdateBillStatusRes {
		Result Result `json:"result"`
	}

	ZaloPaymentReq {
		BillID int64 `form:"billID"`
	}
	ZaloPaymentRes {
		Result   Result `json:"result"`
		OrderUrl string `json:"orderUrl"`
		QrCode   string `json:"qrCode"`
	}

	ZaloPaymentCallbackReq {
		Mac  string `json:"mac"`
		Data string `json:"data"`
		Type int    `json:"type"`
	}
	ZaloPaymentCallbackRes {
		ReturnCode    int    `json:"return_code"`
		ReturnMessage string `json:"return_message"`
	}

	ConfirmContractReq {
		ID       int64  `path:"id"`
		Renters  string `form:"renters,optional"`
		Albums   string `form:"albums,optional"`
		Services string `form:"services,optional"`
	}
	ConfirmContractRes {
		Result Result `json:"result"`
	}

	GetListBillDetailReq {
		BillID int64 `path:"billID"`
	}
	GetListBillDetailRes {
		Result      Result       `json:"result"`
		BillDetails []BillDetail `json:"billDetails"`
	}

	UpdateBillDetailsReq {
		BillID      int64  `path:"billID"`
		BillDetails string `form:"billDetails"`
	}
	UpdateBillDetailsRes {
		Result Result `json:"result"`
	}

	GetListRenterReq {
		Search string `form:"search,optional"`
		Limit  int64  `form:"limit,optional"`
		Offset int64  `form:"offset,optional"`
	}
	GetListRenterRes {
		Result  Result          `json:"result"`
		Renters []RenterContact `json:"renters"`
		Total   int             `json:"total"`
	}

	UpdateRenterStatusReq {
		ID     int64 `path:"id"`
		Status int64 `form:"status,optional"`
	}
	UpdateRenterStatusRes {
		Result Result `json:"result"`
	}
)

@server (
	jwt:        Auth
	middleware: UserTokenMiddleware
	prefix:     /contract
)
service contract-api {
	@doc (
		summary: "List Renter Contact"
	)
	@handler GetListRenter
	get /renters (GetListRenterReq) returns (GetListRenterRes)
	
	@doc (
		summary: "Update Renter Status"
	)
	@handler UpdateRenterStatus
	put /renters/:id (UpdateRenterStatusReq) returns (UpdateRenterStatusRes)
	
	@doc(
		summary: "Get Bill Detail"
	)
	@handler GetListBillDetail
	get /bill-detail/:billID (GetListBillDetailReq) returns (GetListBillDetailRes)
	
	@doc(
		summary: "Update Bill Details"
	)
	@handler UpdateBillDetails
	put /bill-detail/:billID (UpdateBillDetailsReq) returns (UpdateBillDetailsRes)
	
	@doc(
		summary: "Confirm contract"
	)
	@handler ConfirmContract
	put /:id/confirm (ConfirmContractReq) returns (ConfirmContractRes)
	
	@doc (
		summary: "Create contract"
	)
	@handler CreateContract
	post / (CreateContractReq) returns (CreateContractRes)
	
	@doc (
		summary: "Update contract"
	)
	@handler UpdateContract
	put /:id (UpdateContractReq) returns (UpdateContractRes)
	
	@doc (
		summary: "Get contract"
	)
	@handler GetContract
	get /:id (GetContractReq) returns (GetContractRes)
	
	@doc (
		summary: "Delete contract"
	)
	@handler DeleteContract
	delete /:id (DeleteContractReq) returns (DeleteContractRes)
	
	@doc (
		summary: "Filter contract"
	)
	@handler FilterContract
	get /filter (FilterContractReq) returns (FilterContractRes)
	
	@doc (
		summary: "Update contract status"
	)
	@handler UpdateContractStatus
	put /:id/status (UpdateContractStatusReq) returns (UpdateContractStatusRes)
}

@server (
	jwt:        Auth
	middleware: UserTokenMiddleware
	prefix:     /bill
)
service contract-api {
	@doc (
		summary: "Filter bill"
	)
	@handler FilterBill
	get /filter (FilterBillReq) returns (FilterBillRes)
	
	@doc (
		summary: "Get bill detail"
	)
	@handler GetBillDetail
	get /:id (GetBillDetailReq) returns (GetBillDetailRes)
	
	@doc (
		summary: "Update bill detail"
	)
	@handler UpdateBillDetail
	put /:id (UpdateBillDetailReq) returns (UpdateBillDetailRes)
	
	@doc (
		summary: "Create bill pay"
	)
	@handler CreateBillPay
	post /pay (CreateBillPayReq) returns (CreateBillPayRes)
	
	@doc (
		summary: "Delete bill pay"
	)
	@handler DeleteBillPay
	delete /pay/:id (DeleteBillPayReq) returns (DeleteBillPayRes)
	
	@doc (
		summary: "Update bill status"
	)
	@handler UpdateBillStatus
	put /:id/status (UpdateBillStatusReq) returns (UpdateBillStatusRes)
	
	@doc (
		summary: "Zalo payment"
	)
	@handler ZaloPayment
	post /zalo (ZaloPaymentReq) returns (ZaloPaymentRes)
	
}

@server (
	prefix:     /api/bill
)
service contract-api {
	@doc (
		summary: "Callback zalo payment"
	)
	@handler ZaloPaymentCallback
	post /zalo/callback (ZaloPaymentCallbackReq) returns (ZaloPaymentCallbackRes)
}