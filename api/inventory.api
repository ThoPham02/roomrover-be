info (
	title:   "inventory models"
	author:  "thopb"
	email:   "thoahlgbg2002@gamil.com"
	version: "1.0"
)

import "model.api"

type (
	UploadFileHouseReq {
		HouseID int64 `form:"houseID,optional"`
	}
	UploadFileHouseRes {
		Result Result `json:"result"`
		Url    string `json:"url"`
	}
)

type (
	CreateHouseReq {
		Name        string `form:"name"`
		Description string `form:"description"`
		Type        int64  `form:"type"`
		Area        int64  `form:"area"`
		Price       int64  `form:"price"`
		Address     string `form:"address"`
		WardID      int64  `form:"wardID"`
		DistrictID  int64  `form:"districtID"`
		ProvinceID  int64  `form:"provinceID"`
		Albums      string `form:"albums,optional"`
	}
	CreateHouseRes {
		Result Result `json:"result"`
		House  House  `json:"house"`
	}
	FilterHouseReq {
		Search string `form:"search,optional"`
		Limit  int64  `form:"limit"`
		Offset int64  `form:"offset"`
	}
	FilterHouseRes {
		Result     Result  `json:"result"`
		Total      int64   `json:"total"`
		ListHouses []House `json:"listHouses"`
	}
	UpdateHouseStatusReq {
		HouseID int64 `path:"id"`
		Status  int64 `form:"status"`
	}
	UpdateHouseStatusRes {
		Result Result `json:"result"`
	}
	UpdateHouseReq {
		HouseID     int64  `path:"id"`
		Name        string `form:"name"`
		Description string `form:"description"`
		Type        int64  `form:"type"`
		Util        int64  `form:"util,optional"`
		Area        int64  `form:"area"`
		Price       int64  `form:"price"`
		Address     string `form:"address"`
		WardID      int64  `form:"wardID"`
		DistrictID  int64  `form:"districtID"`
		ProvinceID  int64  `form:"provinceID"`
		Albums      string `form:"albums"`
	}
	UpdateHouseRes {
		Result Result `json:"result"`
		House  House  `json:"house"`
	}
	GetHouseReq {
		ID int64 `path:"id"`
	}
	GetHouseRes {
		Result Result `json:"result"`
		House  House  `json:"house"`
	}
)

type (
	CreateRoomReq {
		HouseID     int64  `form:"houseID"`
		Name        string `form:"name"`
		Description string `form:"description"`
		Price       int64  `form:"price"`
		Area        int64  `form:"area"`
	}
	CreateRoomRes {
		Result Result `json:"result"`
		Room   Room   `json:"room"`
	}
)

type (
	CreateServiceReq {
		HouseID int64  `form:"houseID"`
		Name    string `form:"name"`
		Price   int64  `form:"price"`
		Type    int64  `form:"type"`
	}
	CreateServiceRes {
		Result  Result  `json:"result"`
		Service Service `json:"service"`
	}
)

@server (
	jwt:        Auth
	middleware: UserTokenMiddleware
	prefix:     /invent
)
service invent-api {
	@doc (
		summary: "Upload file house"
	)
	@handler UploadFileHouse
	post /upload (UploadFileHouseReq) returns (UploadFileHouseRes)

	@doc (
		summary: "Create house"
	)
	@handler CreateHouse
	post /house (CreateHouseReq) returns (CreateHouseRes)

	@doc (
		summary: "Filter house"
	)
	@handler FilterHouse
	get /house/filter (FilterHouseReq) returns (FilterHouseRes)

	@doc (
		summary: "Get House"
	)
	@handler GetHouse
	get /house/:id (GetHouseReq) returns (GetHouseRes)

	@doc (
		summary: "Create room"
	)
	@handler CreateRoom
	post /room (CreateRoomReq) returns (CreateRoomRes)

	@doc (
		summary: "Create Service"
	)
	@handler CreateService
	post /service (CreateServiceReq) returns (CreateServiceRes)

	@doc (
		summary: "Update House Status"
	)
	@handler UpdateHouseStatus
	put /house/:id/status (UpdateHouseStatusReq) returns (UpdateHouseStatusRes)

	@doc (
		summary: "Update House"
	)
	@handler UpdateHouse
	put /house/:id (UpdateHouseReq) returns (UpdateHouseRes)
}

