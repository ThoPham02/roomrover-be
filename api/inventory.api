info (
	title:   "inventory models"
	author:  "thopb"
	email:   "thoahlgbg2002@gamil.com"
	version: "1.0"
)

import "model.api"

type (
	UploadFileHouseReq {
		HouseID int64 `form:"houseID,optional"`
	}
	UploadFileHouseRes {
		Result Result `json:"result"`
		Url    string `json:"url"`
	}
)

type (
	CreateHouseReq {
		Name        string `form:"name"`
		Description string `form:"description"`
		Type        int64  `form:"type"`
		Area        int64  `form:"area"`
		Price       int64  `form:"price"`
		BedNum      int    `form:"bedNum,optional"`
		LivingNum   int    `form:"livingNum,optional"`
		Unit        int    `form:"unit,optional"`
		Address     string `form:"address"`
		WardID      int64  `form:"wardID"`
		DistrictID  int64  `form:"districtID"`
		ProvinceID  int64  `form:"provinceID"`
		Albums      string `form:"albums,optional"`
		Rooms       string `form:"rooms,optional"`
		Services    string `form:"services,optional"`
		Option      int    `form:"option,optional"`
	}
	CreateHouseRes {
		Result Result `json:"result"`
		House  House  `json:"house"`
	}

	FilterHouseReq {
		Search string `form:"search,optional"`
		Limit  int64  `form:"limit"`
		Offset int64  `form:"offset"`
	}
	FilterHouseRes {
		Result     Result  `json:"result"`
		Total      int64   `json:"total"`
		ListHouses []House `json:"listHouses"`
	}

	UpdateHouseStatusReq {
		HouseID int64 `path:"id"`
		Status  int64 `form:"status"`
	}
	UpdateHouseStatusRes {
		Result Result `json:"result"`
	}

	UpdateHouseReq {
		HouseID     int64  `path:"id"`
		Name        string `form:"name"`
		Description string `form:"description"`
		Type        int64  `form:"type"`
		Area        int64  `form:"area"`
		Price       int64  `form:"price"`
		BedNum      int    `form:"bedNum,optional"`
		LivingNum   int    `form:"livingNum,optional"`
		Unit        int    `form:"unit,optional"`
		Address     string `form:"address"`
		WardID      int64  `form:"wardID"`
		DistrictID  int64  `form:"districtID"`
		ProvinceID  int64  `form:"provinceID"`
		Albums      string `form:"albums,optional"`
		Rooms       string `form:"rooms,optional"`
		Services    string `form:"services,optional"`
		Option      int    `form:"option,optional"`
	}
	UpdateHouseRes {
		Result Result `json:"result"`
		House  House  `json:"house"`
	}

	DeleteHouseReq {
		HouseID int64 `path:"id"`
	}
	DeleteHouseRes {
		Result Result `json:"result"`
	}

	FilterRoomReq {
		Search string `form:"search,optional"`
		Type   int64  `form:"type,optional"`
		Status int64  `form:"status,optional"`
		Limit  int64  `form:"limit"`
		Offset int64  `form:"offset"`
	}
	FilterRoomRes {
		Result Result `json:"result"`
		Total  int    `json:"total"`
		Rooms  []Room `json:"rooms"`
	}

	UpdateRoomStatusReq {
		RoomID int64 `path:"id"`
		Status int64 `form:"status"`
	}
	UpdateRoomStatusRes {
		Result Result `json:"result"`
	}

	GetRoomReq {
		ID int64 `path:"id"`
	}
	GetRoomRes {
		Result   Result   `json:"result"`
		Room     Room     `json:"room"`
		House    House    `json:"house"`
		Contract Contract `json:"contract"`
	}

	SearchRoomReq {
		Search string `form:"search,optional"`
		Type   int64  `form:"type,optional"`
		Status int64  `form:"status,optional"`
		Limit  int64  `form:"limit"`
		Offset int64  `form:"offset"`
	}
	SearchRoomRes {
		Result Result `json:"result"`
		Rooms  []Room `json:"rooms"`
		Total  int    `json:"total"`
	}

	CreateContactReq {
		HouseID  int64 `form:"houseID"`
		LessorID int64 `form:"lessorID"`
		Datetime int64 `form:"datetime"`
	}
	CreateContactRes {
		Result  Result  `json:"result"`
		Contact Contact `json:"contact"`
	}

	DeleteContactReq {
		ID int64 `path:"id"`
	}
	DeleteContactRes {
		Result Result `json:"result"`
	}

	FilterContactReq {
		From   int64 `form:"from,optional"`
		To     int64 `form:"to,optional"`
		Status int64 `form:"status,optional"`
		Limit  int64 `form:"limit"`
		Offset int64 `form:"offset"`
	}
	FilterContactRes {
		Result   Result    `json:"result"`
		Contacts []Contact `json:"contacts"`
		Total    int       `json:"total"`
	}

	UpdateContactStatusReq {
		ID     int64 `path:"id"`
		Status int64 `form:"status"`
	}
	UpdateContactStatusRes {
		Result Result `json:"result"`
	}
)

@server (
	jwt:        Auth
	middleware: UserTokenMiddleware
	prefix:     /invent
)
service invent-api {
	@doc(
		summary: Update Contact Status
	)
	@handler UpdateContactStatus
	put /contact/:id (UpdateContactStatusReq) returns (UpdateContactStatusRes)
	
	@doc(
		summary: Filter Contact
	)
	@handler FilterContact
	get /contact/filter (FilterContactReq) returns (FilterContactRes)
	
	@doc (
		summary: "Delete contact"
	)
	@handler DeleteContact
	delete /contact/:id (DeleteContactReq) returns (DeleteContactRes)
	
	@doc (
		summary: "Create contact"
	)
	@handler CreateContact
	post /contact (CreateContactReq) returns (CreateContactRes)
	
	@doc (
		summary: "Upload file house"
	)
	@handler UploadFileHouse
	post /upload (UploadFileHouseReq) returns (UploadFileHouseRes)
	
	@doc (
		summary: "Create house"
	)
	@handler CreateHouse
	post /house (CreateHouseReq) returns (CreateHouseRes)
	
	@doc (
		summary: "Filter house"
	)
	@handler FilterHouse
	get /house/filter (FilterHouseReq) returns (FilterHouseRes)
	
	@doc (
		summary: "Update House Status"
	)
	@handler UpdateHouseStatus
	put /house/:id/status (UpdateHouseStatusReq) returns (UpdateHouseStatusRes)
	
	@doc (
		summary: "Update House"
	)
	@handler UpdateHouse
	put /house/:id (UpdateHouseReq) returns (UpdateHouseRes)
	
	@doc (
		summary: "Delete House"
	)
	@handler DeleteHouse
	delete /house/:id (DeleteHouseReq) returns (DeleteHouseRes)
	
	@doc (
		summary: "Filter Room"
	)
	@handler FilterRoom
	get /room/filter (FilterRoomReq) returns (FilterRoomRes)
	
	@doc (
		summary: "Update Room Status"
	)
	@handler UpdateRoomStatus
	put /room/:id/status (UpdateRoomStatusReq) returns (UpdateRoomStatusRes)
	
	@doc (
		summary: "Get Room"
	)
	@handler GetRoom
	get /room/:id (GetRoomReq) returns (GetRoomRes)
	
	@doc (
		summary: "Search Room"
	)
	@handler SearchRoom
	get /room/search (SearchRoomReq) returns (SearchRoomRes)
}

type (
	SearchHouseReq {
		Search     string `form:"search,optional"`
		DistrictID int64  `form:"districtID,optional"`
		ProvinceID int64  `form:"provinceID,optional"`
		WardID     int64  `form:"wardID,optional"`
		Type       int64  `form:"type,optional"`
		PriceFrom  int64  `form:"priceFrom,optional"`
		PriceTo    int64  `form:"priceTo,optional"`
		AreaFrom   int64  `form:"areaFrom,optional"`
		AreaTo     int64  `form:"areaTo,optional"`
		Unit       int64  `form:"unit,optional"`
		Limit      int64  `form:"limit"`
		Offset     int64  `form:"offset"`
	}
	SearchHouseRes {
		Result Result  `json:"result"`
		Total  int     `json:"total"`
		Houses []House `json:"houses"`
	}

	GetHouseReq {
		ID int64 `path:"id"`
	}
	GetHouseRes {
		Result Result `json:"result"`
		House  House  `json:"house"`
	}
)

@server (
	prefix:     /invent
)
service invent-api {
	@doc (
		summary: "Search House"
	)
	@handler SearchHouse
	get /house/search (SearchHouseReq) returns (SearchHouseRes)
	
	@doc (
		summary: "Get House"
	)
	@handler GetHouse
	get /house/:id (GetHouseReq) returns (GetHouseRes)
}