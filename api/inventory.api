info (
	title:   "inventory models"
	author:  "thopb"
	email:   "thoahlgbg2002@gamil.com"
	version: "1.0"
)

import "model.api"

type (
	FilterRoomClassReq {
		Search      string `form:"search"`
		ProvinceID  int    `form:"province_code"`
		DistrictID  int    `form:"district_code"`
		WardID      int    `form:"ward_code"`
		Address     string `form:"address"`
		PriceFrom   int64  `form:"price_from"`
		PriceTo     int64  `form:"price_to"`
		AcreageFrom int64  `form:"acreage_from"`
		AcreageTo   int64  `form:"acreage_to"`
	}
	FilterRoomClassRes {
		Result  Result  `json:"result"`
		Classes []Class `json:"classes"`
	}
)

type (
	CreateHouseReq {
		HouseName  string         `form:"house_name"`
		Type       int            `form:"type"`
		Services   []HouseService `form:"services"`
		ProvinceID int            `form:"province_id"`
		DistrictID int            `form:"district_id"`
		WardID     int            `form:"ward_id"`
		Address    string         `form:"address"`
	}
	CreateHouseRes {
		Result Result `json:"result"`
		House  House  `json:"house"`
	}
	UpdateHouseReq {
		ID         int64          `path:"id"`
		HouseName  string         `form:"house_name"`
		Type       int            `form:"type"`
		Services   []HouseService `form:"services"`
		ProvinceID int            `form:"province_id"`
		DistrictID int            `form:"district_id"`
		WardID     int            `form:"ward_id"`
		Address    string         `form:"address"`
	}
	UpdateHouseRes {
		Result Result `json:"result"`
		House  House  `json:"house"`
	}
	DeleteHouseReq {
		ID int64 `path:"id"`
	}
	DeleteHouseRes {
		Result Result `json:"result"`
	}
	GetHouseReq {
		ID int64 `path:"id"`
	}
	GetHouseRes {
		Result Result `json:"result"`
		House  House  `json:"house"`
	}
	FilterHouseReq {
		Search     string `form:"search"`
		ProvinceID int    `form:"province_code"`
		DistrictID int    `form:"district_code"`
		WardID     int    `form:"ward_code"`
		Address    string `form:"address"`
	}
	FilterHouseRes {
		Result Result  `json:"result"`
		Houses []House `json:"houses"`
	}
)

type (
	CreateClassReq {
		ClassName   string `form:"class_name"`
		LensorID    int64  `form:"lensor_id"`
		Price       int64  `form:"price"`
		Acreage     int64  `form:"acreage"`
		Name        string `form:"name"`
		Description string `form:"description"`
	}
	CreateClassRes {
		Result Result `json:"result"`
		Class  Class  `json:"class"`
	}
	UpdateClassReq {
		ID          int64  `path:"id"`
		ClassName   string `form:"class_name"`
		LensorID    int64  `form:"lensor_id"`
		Price       int64  `form:"price"`
		Acreage     int64  `form:"acreage"`
		Name        string `form:"name"`
		Description string `form:"description"`
		Status      int    `form:"status"`
	}
	UpdateClassRes {
		Result Result `json:"result"`
		Class  Class  `json:"class"`
	}
	DeleteClassReq {
		ID int64 `path:"id"`
	}
	DeleteClassRes {
		Result Result `json:"result"`
	}
	GetClassReq {
		ID int64 `path:"id"`
	}
	GetClassRes {
		Result Result `json:"result"`
		Class  Class  `json:"class"`
	}
	FilterClassReq {
		Search     string `form:"search"`
		ProvinceID int    `form:"province_code"`
		DistrictID int    `form:"district_code"`
		WardID     int    `form:"ward_code"`
		Address    string `form:"address"`
	}
	FilterClassRes {
		Result  Result  `json:"result"`
		Classes []Class `json:"classes"`
	}
)

type (
	CreateRoomReq {
		RoomName string `form:"room_name"`
		ClassID  int64  `form:"class_id"`
	}
	CreateRoomRes {
		Result Result `json:"result"`
		Room   Room   `json:"room"`
	}
	DeleteRoomReq {
		ID int64 `path:"id"`
	}
	DeleteRoomRes {
		Result Result `json:"result"`
	}
	GetRoomsByHouseReq {
		HouseID int64 `form:"house_id"`
	}
	FilterRoomRes {
		Result Result `json:"result"`
		Rooms  []Room `json:"rooms"`
	}
)

@server (
	jwt: Auth
)
service inventory-api {
	@doc (
		summary: "FilterRoomClass"
	)
	@handler FilterRoomClass
	get /class/filter (FilterRoomClassReq) returns (FilterRoomClassRes)
}

@server (
	jwt: Auth
)
service inventory-api {
	@doc (
		summary: "CreateHouse"
	)
	@handler CreateHouse
	post /house/create (CreateHouseReq) returns (CreateHouseRes)

	@doc (
		summary: "UpdateHouse"
	)
	@handler UpdateHouse
	post /house/:id (UpdateHouseReq) returns (UpdateHouseRes)

	@doc (
		summary: "DeleteHouse"
	)
	@handler DeleteHouse
	post /house/:id (DeleteHouseReq) returns (DeleteHouseRes)

	@doc (
		summary: "GetHouse"
	)
	@handler GetHouse
	get /house/:id (GetHouseReq) returns (GetHouseRes)

	@doc (
		summary: "FilterHouse"
	)
	@handler FilterHouse
	get /house/filter (FilterHouseReq) returns (FilterHouseRes)

	@doc (
		summary: "CreateClass"
	)
	@handler CreateClass
	post /class/create (CreateClassReq) returns (CreateClassRes)

	@doc (
		summary: "UpdateClass"
	)
	@handler UpdateClass
	post /class/:id (UpdateClassReq) returns (UpdateClassRes)

	@doc (
		summary: "DeleteClass"
	)
	@handler DeleteClass
	post /class/:id (DeleteClassReq) returns (DeleteClassRes)

	@doc (
		summary: "GetClass"
	)
	@handler GetClass
	get /class/:id (GetClassReq) returns (GetClassRes)

	@doc (
		summary: "FilterClass"
	)
	@handler FilterClass
	get /class/filter (FilterClassReq) returns (FilterClassRes)

	@doc (
		summary: "CreateRoom"
	)
	@handler CreateRoom
	post /room/create (CreateRoomReq) returns (CreateRoomRes)

	@doc (
		summary: "DeleteRoom"
	)
	@handler DeleteRoom
	post /room/:id (DeleteRoomReq) returns (DeleteRoomRes)

	@doc (
		summary: "GetRoomsByHouse"
	)
	@handler GetRoomsByHouse
	get /room/filter (GetRoomsByHouseReq) returns (FilterRoomRes)
}

