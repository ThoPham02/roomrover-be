// Code generated by goctl. DO NOT EDIT.
package types

type ChangePasswordReq struct {
	OldPassword string `form:"old_password"`
	NewPassword string `form:"new_password"`
}

type ChangePasswordRes struct {
	Result Result `json:"result"`
}

type GetProfileReq struct {
}

type GetProfileRes struct {
	Result  Result  `json:"result"`
	Profile Profile `json:"profile"`
	User    User    `json:"user"` // Account info
}

type LoginReq struct {
	UserName string `form:"user_name"` // user_name
	Password string `form:"password"`  //  password
}

type LoginRes struct {
	Result Result `json:"result"`
	Token  string `json:"token"` // jwt token for api
	User   User   `json:"user"`  // Account info
}

type Profile struct {
	UserID    int64  `json:"userID"`
	ProfileID int64  `json:"profileID"`
	FullName  string `json:"fullName"`
	Dob       int64  `json:"dob"`
	AvatarUrl string `json:"avatarUrl"`
	Address   string `json:"address"`
	Phone     string `json:"phone"`
	CreatedAt int64  `json:"createdAt"`
	UpdatedAt int64  `json:"updatedAt"`
	CreatedBy int64  `json:"createdBy"`
	UpdatedBy int64  `json:"updatedBy"`
}

type RegisterReq struct {
	UserName string `form:"user_name"`
	Password string `form:"password"`
	Email    string `form:"email"`
	UserRole int64  `form:"user_role"`
}

type RegisterRes struct {
	Result Result `json:"result"`
	Token  string `json:"token"` // jwt token for api
	User   User   `json:"user"`  // Account info
}

type Result struct {
	Code    int    `json:"code"`    //    Result code: 0 is success. Otherwise, getting an error
	Message string `json:"message"` // Result message: detail response code
}

type UpdateProfileReq struct {
	FullName  string `form:"full_name,optional"`
	Dob       int64  `form:"dob,optional"`
	Phone     string `form:"phone,optional"`
	Address   string `form:"address,optional"`
	AvatarUrl string `form:"avatar_url,optional"`
}

type UpdateProfileRes struct {
	Result  Result  `json:"result"`
	Profile Profile `json:"profile"`
	User    User    `json:"user"` // Account info
}

type User struct {
	UserID    int64  `json:"userID"`
	ProfileID int64  `json:"profileID"`
	UserName  string `json:"userName"`
	Email     string `json:"email"`
}
